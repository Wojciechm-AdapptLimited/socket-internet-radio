@page "/"
@implements IDisposable
@using InternetRadioClient.Services
@using System.Net.WebSockets
@inject IJSRuntime JsRuntime
@inject ConnectionService ConnectionService

<PageTitle>Internet Radio</PageTitle>

<h1>Hello, world!</h1>

<audio id="audioPlayer" controls></audio>


@code
{
    private int _isPlaying;
    private readonly ClientWebSocket _socket = new();
    private readonly CancellationTokenSource _cancellationTokenSource = new();


    protected override void OnInitialized()
    {
        _ = ConnectionService.ConnectAsync(_socket, new Uri("ws://localhost:1100"), _cancellationTokenSource.Token);
    }

    public async void Dispose()
    {
        if (ConnectionService == null)
            return;

        Console.WriteLine("Hello dispose");
        Interlocked.Exchange(ref _isPlaying, 0);
        _cancellationTokenSource.Cancel();
        await ConnectionService.DisconnectAsync(_socket, _cancellationTokenSource.Token);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (!firstRender) return;
        Interlocked.Exchange(ref _isPlaying, 1);
        //Task.Run(() => PlayAudio(_cancellationTokenSource.Token), _cancellationTokenSource.Token);
    }

    private async void PlayAudio(CancellationToken cancellationToken)
    {
        Console.WriteLine("Hello play");
        while (Interlocked.CompareExchange(ref _isPlaying, 0, 0) == 1)
        {
            while (ConnectionService.TryDequeueAudio(out var audioData) && audioData != null)
            {
                await JsRuntime.InvokeAsync<object>("playAudio", cancellationToken, audioData);
            }

            await Task.Delay(10, cancellationToken);
        }
    }
}
